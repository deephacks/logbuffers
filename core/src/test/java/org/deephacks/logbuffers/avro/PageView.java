/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.deephacks.logbuffers.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PageView extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PageView\",\"namespace\":\"org.deephacks.logbuffers.avro\",\"fields\":[{\"name\":\"url\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"value\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String url;
  @Deprecated public int value;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public PageView() {}

  /**
   * All-args constructor.
   */
  public PageView(java.lang.String url, java.lang.Integer value) {
    this.url = url;
    this.value = value;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return url;
    case 1: return value;
    default: throw new org.apache.avro.AvroRuntimeException("Bad startStopIndexForTime");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: url = (java.lang.String)value$; break;
    case 1: value = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad startStopIndexForTime");
    }
  }

  /**
   * Gets the value of the 'url' field.
   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * @param value the value to set.
   */
  public void setUrl(java.lang.String value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'value' field.
   */
  public java.lang.Integer getValue() {
    return value;
  }

  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.lang.Integer value) {
    this.value = value;
  }

  /** Creates a new PageView RecordBuilder */
  public static org.deephacks.logbuffers.avro.PageView.Builder newBuilder() {
    return new org.deephacks.logbuffers.avro.PageView.Builder();
  }
  
  /** Creates a new PageView RecordBuilder by copying an existing Builder */
  public static org.deephacks.logbuffers.avro.PageView.Builder newBuilder(org.deephacks.logbuffers.avro.PageView.Builder other) {
    return new org.deephacks.logbuffers.avro.PageView.Builder(other);
  }
  
  /** Creates a new PageView RecordBuilder by copying an existing PageView instance */
  public static org.deephacks.logbuffers.avro.PageView.Builder newBuilder(org.deephacks.logbuffers.avro.PageView other) {
    return new org.deephacks.logbuffers.avro.PageView.Builder(other);
  }
  
  /**
   * RecordBuilder for PageView instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PageView>
    implements org.apache.avro.data.RecordBuilder<PageView> {

    private java.lang.String url;
    private int value;

    /** Creates a new Builder */
    private Builder() {
      super(org.deephacks.logbuffers.avro.PageView.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.deephacks.logbuffers.avro.PageView.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.url)) {
        this.url = data().deepCopy(fields()[0].schema(), other.url);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.value)) {
        this.value = data().deepCopy(fields()[1].schema(), other.value);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing PageView instance */
    private Builder(org.deephacks.logbuffers.avro.PageView other) {
            super(org.deephacks.logbuffers.avro.PageView.SCHEMA$);
      if (isValidValue(fields()[0], other.url)) {
        this.url = data().deepCopy(fields()[0].schema(), other.url);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.value)) {
        this.value = data().deepCopy(fields()[1].schema(), other.value);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'url' field */
    public java.lang.String getUrl() {
      return url;
    }
    
    /** Sets the value of the 'url' field */
    public org.deephacks.logbuffers.avro.PageView.Builder setUrl(java.lang.String value) {
      validate(fields()[0], value);
      this.url = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'url' field has been set */
    public boolean hasUrl() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'url' field */
    public org.deephacks.logbuffers.avro.PageView.Builder clearUrl() {
      url = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'value' field */
    public java.lang.Integer getValue() {
      return value;
    }
    
    /** Sets the value of the 'value' field */
    public org.deephacks.logbuffers.avro.PageView.Builder setValue(int value) {
      validate(fields()[1], value);
      this.value = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'value' field has been set */
    public boolean hasValue() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'value' field */
    public org.deephacks.logbuffers.avro.PageView.Builder clearValue() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public PageView build() {
      try {
        PageView record = new PageView();
        record.url = fieldSetFlags()[0] ? this.url : (java.lang.String) defaultValue(fields()[0]);
        record.value = fieldSetFlags()[1] ? this.value : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
